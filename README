Постановка задачі: списки та функціональне програмування

Мови функціонального програмування (Lisp, ML, Haskell та ін.)  містять єдину 
структура даних – список і єдину алгоритмічну структуру – функцію, 
яка також має вигляд списку. Необхідно скласти програму, яка забезпечує роботу 
користувача зі списками у стилі функціонального програмування. 

Користувач вводить: 
a) (= x (1 2 3) )          - програма виконує наступні дії:у список х заносяться значення (1,2,3). 
b) (cdr x)                 – в результаті на екран виводиться хвіст списку 
c) (= y (append x (-2 -1)) – в результаті список y буде містити значення (1 2 3 -2 -1) 

Використання псевдозмінних для списку аналогічно використанню псевдозмінних для 
стека. 

Розробити об’єктно-орієнтовану бібліотеку для роботи зі структурою даних список. 
Властивості та методи для класів розробити у відповідності з відомими визначеннями. 
Скласти тести для перевірки працездатності бібліотеки. Скласти програму, в якій реалізовані 
вищєзазначені операції роботи зі списками 
У класі списку повинні бути реалізовані наступні можливості: 
1. Реалізація методів ініціалізації (конструктор по замовчуванню та конструктор з 
   параметрами), копіювання (конструктор копіювання), індексації (перевантаження []), 
   присваивания (перевантаження =), візуалізації, збереження (на диск) та відновлення, 
   діалогового керування, "розумного доступу" (перевантаження ->), а також псевдо 
   змінних (забезпечення можливості виду: f(x)=const). 
2. Перевантаження (спільне використання) потокового введення/виведення. (введення з 
   файл, виведення в файл) 
3. Створення та використання файла бібліотеки (*.dylib). 
4. Повторне використання класів без їх перекомпіляції (ReUse). 
5. Застосування структури список для розв’язання задачі. 


